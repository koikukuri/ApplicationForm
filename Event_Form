<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Koi-Kukuri イベント申し込み</title>
    <!-- Removed LINE LIFF SDK -->
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; background-color: #fce4ec; color: #333; margin: 0; padding: 20px; }
        .container { max-width: 600px; margin: 0 auto; background-color: #fff; padding: 30px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
        h1 { text-align: center; color: #d81b60; font-size: 24px; margin-bottom: 10px; }
        h2 { text-align: center; color: #d81b60; font-size: 22px; line-height: 1.4; margin-bottom: 20px; }
        .intro-text { text-align: center; font-size: 15px; color: #555; line-height: 1.6; margin-bottom: 20px; }
        .event-details { text-align: center; background-color: #fffde7; border: 1px dashed #fbc02d; padding: 12px; border-radius: 8px; margin-bottom: 25px; font-size: 16px; }
        .form-group { margin-bottom: 20px; }
        label { display: block; font-weight: bold; margin-bottom: 8px; font-size: 14px; }
        input[type="text"], input[type="number"], input[type="email"], input[type="file"], select { width: 100%; padding: 12px; border: 1px solid #ccc; border-radius: 8px; box-sizing: border-box; font-size: 16px; }
        input[type="file"] { padding: 5px; }
        .file-note { font-size: 12px; color: #666; margin-top: 5px; }
        .privacy-policy { margin-top: 25px; padding: 15px; border: 1px solid #eee; border-radius: 8px; height: 120px; overflow-y: scroll; background-color: #f9f9f9; font-size: 12px; color: #555; }
        .checkbox-group { display: flex; align-items: center; margin-top: 15px; }
        .checkbox-group input { margin-right: 10px; }
        .submit-btn, .event-select-btn { width: 100%; background-color: #d81b60; color: white; padding: 15px; border: none; border-radius: 8px; font-size: 18px; font-weight: bold; cursor: pointer; text-decoration: none; display: block; box-sizing: border-box; text-align: center; margin-bottom: 15px; }
        .button-group { margin-top: 20px; text-align: center; }
        .button-group .later-btn { background-color: #eee; color: #333; display: inline-block; padding: 12px 24px; margin: 5px; border-radius: 8px; text-decoration: none; font-weight: bold; }
        
        .event-select-btn {
            position: relative;
            background-color: #fff;
            color: #333;
            border: 2px solid #d81b60;
            text-align: left;
            transition: background-color 0.2s, transform 0.2s;
        }
        .event-select-btn:hover:not(:disabled) {
            background-color: #fdf2f8;
            transform: translateY(-2px);
        }
        .event-btn-title { font-size: 18px; color: #d81b60; display: block; margin-bottom: 8px; }
        .event-btn-details { font-size: 15px; color: #555; font-weight: normal; }
        .status-full, .status-partial { position: absolute; top: 10px; right: 15px; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }
        .status-full { background-color: #6c757d; color: white; }
        .status-partial { background-color: #ffc107; color: #333; }
        .event-select-btn:disabled { opacity: 0.6; cursor: not-allowed; border-color: #ccc; }
        .event-select-btn:disabled .event-btn-title { color: #6c757d; }

        .loading-container { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(255, 255, 255, 0.95); z-index: 9999; justify-content: center; align-items: center; flex-direction: column; }
        .loading-container p { font-size: 18px; font-weight: bold; color: #555; margin-top: 20px; }
        .spinner-wrapper { position: relative; width: 80px; height: 80px; }
        .spinner-track { position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: 6px solid #fdeaf1; border-radius: 50%; box-sizing: border-box; }
        .spinner-rotor { position: absolute; top: 0; left: 0; width: 100%; height: 100%; animation: rotate-rotor 2s linear infinite; }
        .loading-heart { position: absolute; top: -11px; left: 50%; transform: translateX(-50%); width: 22px; height: 22px; fill: #d81b60; animation: counter-rotate-rotor 2s linear infinite; }
        @keyframes rotate-rotor { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
        @keyframes counter-rotate-rotor { from { transform: rotate(0deg); } to { transform: rotate(-360deg); } }
        .view { display: none; }
    </style>
</head>
<body>
    <div id="loading-view" class="container view" style="display: block;">
        <h1>読み込み中...</h1>
        <p class="intro-text">イベント情報を取得しています。<br>少々お待ちください。</p>
    </div>

    <!-- The 'add friend' view has been removed -->

    <div id="event-selection-view" class="container view">
        <h1>イベントを選択</h1>
        <p class="intro-text">参加したいイベントを選んでください。</p>
        <div id="event-list">
            <!-- Event buttons will be added here by JavaScript -->
        </div>
    </div>

    <div id="form-view" class="container view">
        <h1 id="event-title">イベント申し込み</h1>
        <div class="event-details" id="event-details"></div>
        <form id="applicationForm">
            <!-- The hidden lineUserId input field has been removed -->
            <input type="hidden" id="selectedEventName" name="eventName">
            <div class="form-group"><label for="name">氏名</label><input type="text" id="name" name="name" required></div>
            <div class="form-group">
                <label for="email">メールアドレス</label>
                <input type="email" id="email" name="email" required placeholder="contact@example.com">
            </div>
            <div class="form-group"><label for="age">年齢</label><input type="number" id="age" name="age" min="18" required></div>
            <div class="form-group"><label for="gender">性別</label><select id="gender" name="gender" required><option value="">選択してください</option><option value="男性">男性</option><option value="女性">女性</option></select></div>
            <div class="form-group"><label for="prefecture">都道府県</label><select id="prefecture" name="prefecture" required><option value="">選択してください</option><option value="北海道">北海道</option><option value="青森県">青森県</option><option value="岩手県">岩手県</option><option value="宮城県">宮城県</option><option value="秋田県">秋田県</option><option value="山形県">山形県</option><option value="福島県">福島県</option><option value="茨城県">茨城県</option><option value="栃木県">栃木県</option><option value="群馬県">群馬県</option><option value="埼玉県">埼玉県</option><option value="千葉県">千葉県</option><option value="東京都">東京都</option><option value="神奈川県">神奈川県</option><option value="新潟県">新潟県</option><option value="富山県">富山県</option><option value="石川県">石川県</option><option value="福井県">福井県</option><option value="山梨県">山梨県</option><option value="長野県">長野県</option><option value="岐阜県">岐阜県</option><option value="静岡県">静岡県</option><option value="愛知県">愛知県</option><option value="三重県">三重県</option><option value="滋賀県">滋賀県</option><option value="京都府">京都府</option><option value="大阪府">大阪府</option><option value="兵庫県">兵庫県</option><option value="奈良県">奈良県</option><option value="和歌山県">和歌山県</option><option value="鳥取県">鳥取県</option><option value="島根県">島根県</option><option value="岡山県">岡山県</option><option value="広島県">広島県</option><option value="山口県">山口県</option><option value="徳島県">徳島県</option><option value="香川県">香川県</option><option value="愛媛県">愛媛県</option><option value="高知県">高知県</option><option value="福岡県">福岡県</option><option value="佐賀県">佐賀県</option><option value="長崎県">長崎県</option><option value="熊本県">熊本県</option><option value="大分県">大分県</option><option value="宮崎県">宮崎県</option><option value="鹿児島県">鹿児島県</option><option value="沖縄県">沖縄県</option></select></div>
            <div class="form-group"><label for="id-upload">身分証アップロード</label><input type="file" id="id-upload" name="id-upload" accept="image/*"><p class="file-note">※今回はお試しイベントのため、提出は任意です。</p></div>
            <div class="privacy-policy">
                <p><strong>プライバシーポリシー</strong></p>
                <p>Koi-Kukuri運営事務局（以下「当事務局」）は、本サービスの利用者（以下「ユーザー」）の個人情報について、以下のとおりプライバシーポリシーを定めます。</p>
                <p><strong>第1条（個人情報の取得）</strong><br>当事務局は、ユーザーが本サービスを利用するにあたり、氏名、メールアドレス、年齢、性別、その他申込フォームにご入力いただいた情報を取得します。</p>
                <p><strong>第2条（利用目的）</strong><br>取得した個人情報は、イベント運営、本人確認、お問い合わせ対応、Gather参加URLの送付、及びサービスの改善のために利用します。</p>
                <p><strong>第3条（第三者提供）</strong><br>当事務局は、法令に基づく場合を除き、ユーザーの同意なく個人情報を第三者に提供しません。</p>
                <p><strong>第4条（安全管理）</strong><br>当事務局は、個人情報の漏洩、滅失又はき損の防止その他の個人情報の安全管理のために必要かつ適切な措置を講じます。</p>
            </div>
            <div class="checkbox-group"><input type="checkbox" id="privacy-consent" name="privacy-consent" required><label for="privacy-consent">プライバシーポリシーに同意します</label></div><br>
            <button type="submit" class="submit-btn">申し込みを確定する</button>
        </form>
    </div>

    <div id="submission-complete-view" class="container view">
        <h2>お申し込み<br>ありがとうございます！</h2>
        <!-- Updated confirmation message to remove mention of LINE -->
        <p>申し込み内容の詳細は、ご入力いただいたメールアドレスをご確認ください。<br>この画面は閉じていただいて構いません。</p>
        <div class="button-group">
            <!-- Removed LIFF-specific close function -->
            <a href="javascript:window.close();" class="later-btn">ウィンドウを閉じる</a>
        </div>
    </div>
    
    <div id="sending-overlay" class="loading-container">
        <div class="spinner-wrapper">
            <div class="spinner-track"></div>
            <div class="spinner-rotor">
                <svg class="loading-heart" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"></path></svg>
            </div>
        </div>
        <p>送信中...</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', main);

        async function main() {
            // Google Apps Script endpoint for fetching events and submitting the form
            const endpoint = 'https://script.google.com/macros/s/AKfycbySxHKkrOw9psW7mPS1QOHEO94sZ4xIKJDA0AQlFVv0i2d7Z55gH8Svy_yfcRcQeU04cA/exec';

            // DOM elements for different views
            const views = {
                loading: document.getElementById('loading-view'),
                eventSelection: document.getElementById('event-selection-view'),
                form: document.getElementById('form-view'),
                complete: document.getElementById('submission-complete-view')
            };

            // Helper function to show a specific view and hide others
            const showView = (viewName) => {
                for (const key in views) {
                    if (Object.prototype.hasOwnProperty.call(views, key)) {
                        views[key].style.display = 'none';
                    }
                }
                if (views[viewName]) {
                    views[viewName].style.display = 'block';
                }
            };

            // Fetch event data from the backend
            try {
                const response = await fetch(endpoint);
                const resData = await response.json();

                if (resData.status === 'success' && resData.data.length > 0) {
                    const eventListContainer = document.getElementById('event-list');
                    eventListContainer.innerHTML = '';
                    resData.data.forEach(event => {
                        const button = document.createElement('button');
                        button.className = 'event-select-btn';
                        
                        // Check if the event is full for male or female participants
                        const isMaleFull = event.maleApplicants >= event.maleCapacity;
                        const isFemaleFull = event.femaleApplicants >= event.femaleCapacity;
                        let statusText = '';
                        if (isMaleFull && isFemaleFull) {
                            statusText = '<span class="status-full">満員御礼</span>';
                            button.disabled = true;
                        } else if (isMaleFull) {
                            statusText = '<span class="status-partial">男性満員</span>';
                        } else if (isFemaleFull) {
                            statusText = '<span class="status-partial">女性満員</span>';
                        }

                        button.innerHTML = `<span class="event-btn-title">${event.name}</span><span class="event-btn-details">${event.date} / ${event.time}</span>${statusText}`;
                        
                        // Set up click handler for the event button
                        button.onclick = () => {
                            if (button.disabled) {
                                alert("このイベントは満員のため、お申し込みいただけません。");
                                return;
                            }
                            // Populate the form with details of the selected event
                            document.getElementById('event-title').textContent = event.name;
                            document.getElementById('event-details').innerHTML = `<strong>開催日時:</strong> ${event.date} ${event.time}`;
                            document.getElementById('selectedEventName').value = event.name;
                            showView('form');
                        };
                        eventListContainer.appendChild(button);
                    });
                    showView('eventSelection');
                } else {
                    // Display a message if no events are currently available
                    showView('loading');
                    views.loading.innerHTML = `<h1>お知らせ</h1><p>${resData.message || "現在募集中のイベントはありません。"}</p>`;
                }
            } catch (err) {
                console.error(err);
                showView('loading');
                views.loading.innerHTML = `<h1>エラーが発生しました</h1><p>ページの読み込みに失敗しました。時間をおいて再度お試しください。</p><p><small>エラー: ${err.message}</small></p>`;
            }
        }

        const form = document.getElementById('applicationForm');
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            
            // Show the sending overlay
            const sendingOverlay = document.getElementById('sending-overlay');
            sendingOverlay.style.display = 'flex';
            document.getElementById('form-view').style.display = 'none';

            const fileInput = document.getElementById('id-upload');
            const file = fileInput.files[0];

            // Construct the data object from form inputs
            const data = {
                // lineUserId has been removed
                eventName: document.getElementById('selectedEventName').value,    
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                age: document.getElementById('age').value,
                gender: document.getElementById('gender').value,
                prefecture: document.getElementById('prefecture').value,
            };

            // If a file is selected, read it as Base64 and add it to the data object
            if (file) {
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function() {
                    data.fileData = reader.result;
                    data.fileName = file.name;
                    sendData(data);
                };
                reader.onerror = function() {
                    alert('ファイルの読み込みに失敗しました。');
                    sendingOverlay.style.display = 'none';
                    document.getElementById('form-view').style.display = 'block';
                };
            } else {
                sendData(data);
            }
        });

        function sendData(data) {
            const endpoint = 'https://script.google.com/macros/s/AKfycbySxHKkrOw9psW7mPS1QOHEO94sZ4xIKJDA0AQlFVv0i2d7Z55gH8Svy_yfcRcQeU04cA/exec';
            
            fetch(endpoint, {
                method: 'POST',
                headers: { 'Content-Type': 'text/plain;charset=utf-8' }, // GAS Web App often uses text/plain for POST
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(resData => {
                document.getElementById('sending-overlay').style.display = 'none';
                
                if (resData.status === 'success') {
                    showView('complete');
                } else if (resData.status === 'full' || resData.status === 'closed') {
                    alert(resData.message);
                    showView('form');
                } else {
                    alert('サーバーでエラーが発生しました: ' + (resData.message || '不明なエラー'));
                    showView('form');
                }
            })
            .catch(error => {
                document.getElementById('sending-overlay').style.display = 'none';
                showView('form');
                alert('送信中にエラーが発生しました: ' + error);
            });
        }
    </script>
</body>
</html>
